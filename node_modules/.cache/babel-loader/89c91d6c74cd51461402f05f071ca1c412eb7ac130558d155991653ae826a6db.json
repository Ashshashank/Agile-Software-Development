{"ast":null,"code":"var _jsxFileName = \"/Users/shashank/Documents/GitHub/AgileWebsiteApp/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [token, setToken] = useState(sessionStorage.getItem('token') || \"\");\n  const handleLogin = async () => {\n    // Example of fetching a token from an API endpoint\n    try {\n      const response = await fetch('http://localhost:5000/authentication-swagger/v1/Token', {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: \"tim@gmail.com\",\n          password: \"123\"\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const content = await response.json();\n      // setToken(content);\n      sessionStorage.setItem('token', content);\n      console.log(sessionStorage.getItem('token'));\n      setToken(sessionStorage.getItem('token'));\n    } catch (error) {\n      console.error(\"Error fetching the token\", error);\n    }\n  };\n\n  // render token\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login and Store Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), token && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Token: \", token]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n}\n_s(Login, \"oM8up1NRBIiHc+An55blBqODXck=\");\n_c = Login;\nexport default Login;\n\n// Fetch owned courses with jwt token\n// const fetchOwnedCourses = async () => {\n//     const [ownedCourses, setCourses] = useState([]);\n//     const storedToken = \"Bearer \" + sessionStorage.getItem('token');\n//     try {\n//       const response = await fetch('http://localhost:5000/authentication-swagger/v1/owned-courses', {\n//         method: 'GET',\n//         headers: {\n//           'accept': 'application/json',\n//           'Authorization': storedToken\n//         }\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Unable to fetch owned courses');\n//       }\n\n//       const content = await response.json();\n//       setCourses(data);\n//     } catch (error) {\n//       console.error(\"Error fetching owned courses\", error);\n//     }\n//   };\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","token","setToken","sessionStorage","getItem","handleLogin","response","fetch","method","headers","body","JSON","stringify","email","password","ok","Error","content","json","setItem","console","log","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shashank/Documents/GitHub/AgileWebsiteApp/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Login() {\n    const [token, setToken] = useState(sessionStorage.getItem('token') || \"\");\n  \n    const handleLogin = async () => {\n// Example of fetching a token from an API endpoint\n      try {\n        const response = await fetch('http://localhost:5000/authentication-swagger/v1/Token', {\n          method: 'POST',\n          headers: {\n            'accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: \"tim@gmail.com\",\n            password: \"123\"\n          })\n        });\n        \n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n  \n        const content = await response.json();\n        // setToken(content);\n        sessionStorage.setItem('token', content);\n        console.log(sessionStorage.getItem('token'))\n        setToken(sessionStorage.getItem('token'))\n      } catch (error) {\n        console.error(\"Error fetching the token\", error);\n      }\n    };\n  \n\n// render token\n    return (\n      <div>\n        <button onClick={handleLogin}>Login and Store Token</button>\n        {token && <div>Token: {token}</div>}\n      </div>\n    );\n  }\n\nexport default Login;\n\n\n// Fetch owned courses with jwt token\n// const fetchOwnedCourses = async () => {\n//     const [ownedCourses, setCourses] = useState([]);\n//     const storedToken = \"Bearer \" + sessionStorage.getItem('token');\n//     try {\n//       const response = await fetch('http://localhost:5000/authentication-swagger/v1/owned-courses', {\n//         method: 'GET',\n//         headers: {\n//           'accept': 'application/json',\n//           'Authorization': storedToken\n//         }\n//       });\n      \n//       if (!response.ok) {\n//         throw new Error('Unable to fetch owned courses');\n//       }\n\n//       const content = await response.json();\n//       setCourses(data);\n//     } catch (error) {\n//       console.error(\"Error fetching owned courses\", error);\n//     }\n//   };\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACO,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;EAEzE,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IACpC;IACM,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuD,EAAE;QACpFC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,KAAK,EAAE,eAAe;UACtBC,QAAQ,EAAE;QACZ,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAMC,OAAO,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MACrC;MACAf,cAAc,CAACgB,OAAO,CAAC,OAAO,EAAEF,OAAO,CAAC;MACxCG,OAAO,CAACC,GAAG,CAAClB,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;MAC5CF,QAAQ,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;;EAGL;EACI,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAQ0B,OAAO,EAAEnB,WAAY;MAAAkB,QAAA,EAAC;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC3D3B,KAAK,iBAAIH,OAAA;MAAAyB,QAAA,GAAK,SAAO,EAACtB,KAAK;IAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV;AAAC5B,EAAA,CAxCMD,KAAK;AAAA8B,EAAA,GAAL9B,KAAK;AA0Cd,eAAeA,KAAK;;AAGpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}