{"ast":null,"code":"function ValidationResult(payload) {\n  const validateEmail = payload => {\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return regex.test(payload['email']);\n  };\n  const validatePhoneNumber = payload => {\n    const regex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n    return regex.test(payload['contactNo']);\n  };\n  const validateFullName = payload => {\n    const regex = /^[a-z ]+$/i;\n    const lengthWithoutSpaces = payload['name'].replace(/\\s/g, '').length;\n    return regex.test(payload['name']) && lengthWithoutSpaces >= 2;\n  };\n  const validatePassword = payload => {\n    return payload['password'].length >= 6 && !/\\s/.test(payload['password']);\n  };\n  if (!validateEmail(payload)) {\n    return 'Please enter valid email address';\n  }\n  if (!validatePassword(payload)) {\n    return 'Please enter password at least 6 digit and without space';\n  }\n  if (!validatePhoneNumber(payload)) {\n    return 'Please enter 10 digit phone number';\n  }\n  if (!validateFullName(payload)) {\n    return 'Please enter valid fullname with no special character. Minimum two characters';\n  } else {\n    return 'Sign Up Successful!';\n  }\n}\n_c = ValidationResult;\nexport default ValidationResult;\nvar _c;\n$RefreshReg$(_c, \"ValidationResult\");","map":{"version":3,"names":["ValidationResult","payload","validateEmail","regex","test","validatePhoneNumber","validateFullName","lengthWithoutSpaces","replace","length","validatePassword","_c","$RefreshReg$"],"sources":["/Users/shashank/Documents/GitHub/AgileWebsiteApp/src/pages/validation.js"],"sourcesContent":["function ValidationResult(payload){\n    const validateEmail = (payload) => {\n        const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return regex.test(payload['email']);\n      };\n\n    const validatePhoneNumber = (payload) => {\n        const regex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n        return regex.test(payload['contactNo']);\n    };\n\n    const validateFullName = (payload) => {\n        const regex = /^[a-z ]+$/i;\n        const lengthWithoutSpaces = payload['name'].replace(/\\s/g, '').length;\n        return regex.test(payload['name']) && lengthWithoutSpaces >= 2;\n    };\n\n    const validatePassword = (payload) => {\n      return payload['password'].length >= 6 && !/\\s/.test(payload['password']);\n  };\n\n    if (!validateEmail(payload)) {\n      return 'Please enter valid email address';\n    }\n    if (!validatePassword(payload)) {\n      return 'Please enter password at least 6 digit and without space';\n    }\n    if (!validatePhoneNumber(payload)) {\n      return 'Please enter 10 digit phone number';\n    }\n    if (!validateFullName(payload)) {\n      return 'Please enter valid fullname with no special character. Minimum two characters';\n    }\n    else{\n        return 'Sign Up Successful!';\n    }\n}\n\nexport default ValidationResult;"],"mappings":"AAAA,SAASA,gBAAgBA,CAACC,OAAO,EAAC;EAC9B,MAAMC,aAAa,GAAID,OAAO,IAAK;IAC/B,MAAME,KAAK,GAAG,4BAA4B;IAC1C,OAAOA,KAAK,CAACC,IAAI,CAACH,OAAO,CAAC,OAAO,CAAC,CAAC;EACrC,CAAC;EAEH,MAAMI,mBAAmB,GAAIJ,OAAO,IAAK;IACrC,MAAME,KAAK,GAAG,oDAAoD;IAClE,OAAOA,KAAK,CAACC,IAAI,CAACH,OAAO,CAAC,WAAW,CAAC,CAAC;EAC3C,CAAC;EAED,MAAMK,gBAAgB,GAAIL,OAAO,IAAK;IAClC,MAAME,KAAK,GAAG,YAAY;IAC1B,MAAMI,mBAAmB,GAAGN,OAAO,CAAC,MAAM,CAAC,CAACO,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACC,MAAM;IACrE,OAAON,KAAK,CAACC,IAAI,CAACH,OAAO,CAAC,MAAM,CAAC,CAAC,IAAIM,mBAAmB,IAAI,CAAC;EAClE,CAAC;EAED,MAAMG,gBAAgB,GAAIT,OAAO,IAAK;IACpC,OAAOA,OAAO,CAAC,UAAU,CAAC,CAACQ,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAACL,IAAI,CAACH,OAAO,CAAC,UAAU,CAAC,CAAC;EAC7E,CAAC;EAEC,IAAI,CAACC,aAAa,CAACD,OAAO,CAAC,EAAE;IAC3B,OAAO,kCAAkC;EAC3C;EACA,IAAI,CAACS,gBAAgB,CAACT,OAAO,CAAC,EAAE;IAC9B,OAAO,0DAA0D;EACnE;EACA,IAAI,CAACI,mBAAmB,CAACJ,OAAO,CAAC,EAAE;IACjC,OAAO,oCAAoC;EAC7C;EACA,IAAI,CAACK,gBAAgB,CAACL,OAAO,CAAC,EAAE;IAC9B,OAAO,+EAA+E;EACxF,CAAC,MACG;IACA,OAAO,qBAAqB;EAChC;AACJ;AAACU,EAAA,GApCQX,gBAAgB;AAsCzB,eAAeA,gBAAgB;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}